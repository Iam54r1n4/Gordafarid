name: Build and Publish Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (v1.0, v2.0, etc.)

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22'

    - name: Build binaries
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      run: |
        mkdir -p bin/${{ matrix.os }}_${{ matrix.arch }}
        echo "Building for OS: $GOOS, ARCH: $GOARCH"
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o bin/${{ matrix.os }}_${{ matrix.arch }}/client ./cmd/client
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o bin/${{ matrix.os }}_${{ matrix.arch }}/server ./cmd/server

    - name: List binaries
      run: ls -R bin/

    - name: Extract tag name
      id: extract_tag
      run: echo "TAG_NAME=$(echo $GITHUB_REF | sed 's/refs\/tags\///')" >> $GITHUB_ENV

    - name: Rename and Prepare Files for Release
      run: |
        BASE_NAME="gordafarid"
        # Rename binaries to the specified format
        if [[ "${{ matrix.os }}" == "windows" ]]; then
          mv bin/${{ matrix.os }}_${{ matrix.arch }}/client bin/${{ matrix.os }}_${{ matrix.arch }}/${BASE_NAME}-client-${TAG_NAME}-${{ matrix.os }}-${{ matrix.arch }}.exe
          mv bin/${{ matrix.os }}_${{ matrix.arch }}/server bin/${{ matrix.os }}_${{ matrix.arch }}/${BASE_NAME}-server-${TAG_NAME}-${{ matrix.os }}-${{ matrix.arch }}.exe
        else
          mv bin/${{ matrix.os }}_${{ matrix.arch }}/client bin/${{ matrix.os }}_${{ matrix.arch }}/${BASE_NAME}-client-${TAG_NAME}-${{ matrix.os }}-${{ matrix.arch }}
          mv bin/${{ matrix.os }}_${{ matrix.arch }}/server bin/${{ matrix.os }}_${{ matrix.arch }}/${BASE_NAME}-server-${TAG_NAME}-${{ matrix.os }}-${{ matrix.arch }}
        fi

    - name: List files after renaming
      run: ls -R bin/

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ env.TAG_NAME }}
        name: Release ${{ env.TAG_NAME }}
        body: |
          Binaries for ${{ env.TAG_NAME }}
      continue-on-error: true # Allows it to continue even if the release already exists

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ env.TAG_NAME }}
        files: |
          bin/linux_amd64/gordafarid-client-${{ env.TAG_NAME }}-linux-amd64
          bin/linux_amd64/gordafarid-server-${{ env.TAG_NAME }}-linux-amd64
          bin/linux_arm64/gordafarid-client-${{ env.TAG_NAME }}-linux-arm64
          bin/linux_arm64/gordafarid-server-${{ env.TAG_NAME }}-linux-arm64
          bin/windows_amd64/gordafarid-client-${{ env.TAG_NAME }}-windows-amd64.exe
          bin/windows_amd64/gordafarid-server-${{ env.TAG_NAME }}-windows-amd64.exe
          bin/windows_arm64/gordafarid-client-${{ env.TAG_NAME }}-windows-arm64.exe
          bin/windows_arm64/gordafarid-server-${{ env.TAG_NAME }}-windows-arm64.exe
          bin/darwin_amd64/gordafarid-client-${{ env.TAG_NAME }}-darwin-amd64
          bin/darwin_amd64/gordafarid-server-${{ env.TAG_NAME }}-darwin-amd64
          bin/darwin_arm64/gordafarid-client-${{ env.TAG_NAME }}-darwin-arm64
          bin/darwin_arm64/gordafarid-server-${{ env.TAG_NAME }}-darwin-arm64
